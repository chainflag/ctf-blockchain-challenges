{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "ForFlag",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "payforflag",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "sendFlag",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/a.sol"
  },
  "ast": {
    "absolutePath": "contracts/a.sol",
    "exportedSymbols": {
      "BoxGame": [
        202
      ]
    },
    "id": 203,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 84,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 202,
        "linearizedBaseContracts": [
          202
        ],
        "name": "BoxGame",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 88,
            "name": "ForFlag",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "64:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "64:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "63:14:1"
            },
            "src": "50:28:1"
          },
          {
            "constant": false,
            "id": 90,
            "name": "target",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "83:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 89,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "83:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "165:842:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 96,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "192:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "209:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "201:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "201:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "192:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        220,
                        221
                      ],
                      "referencedDeclaration": 220,
                      "src": "184:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "184:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "184:28:1"
                },
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "231:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "231:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "231:12:1"
                },
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "name": "code",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "253:17:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "253:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "253:17:1"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 104,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "304:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "_addr": {
                        "declaration": 92,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "324:5:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "code": {
                        "declaration": 107,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "343:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "code": {
                        "declaration": 107,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "462:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "size": {
                        "declaration": 104,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "468:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "code": {
                        "declaration": 107,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "509:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "code": {
                        "declaration": 107,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "392:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "size": {
                        "declaration": 104,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "410:4:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "_addr": {
                        "declaration": 92,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "498:5:1",
                        "valueSize": 1
                      }
                    },
                    {
                      "size": {
                        "declaration": 104,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "525:4:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 109,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(_addr)\n    code := mload(0x40)\n    mstore(0x40, add(code, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n    mstore(code, size)\n    extcodecopy(_addr, add(code, 0x20), 0, size)\n}",
                  "src": "281:259:1"
                },
                {
                  "body": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "591:315:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 122,
                                  "name": "code",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "613:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 124,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 123,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "618:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "613:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30786630",
                                "id": 125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "624:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_240_by_1",
                                  "typeString": "int_const 240"
                                },
                                "value": "0xf0"
                              },
                              "src": "613:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 121,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              220,
                              221
                            ],
                            "referencedDeclaration": 220,
                            "src": "605:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "605:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 128,
                        "nodeType": "ExpressionStatement",
                        "src": "605:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 130,
                                  "name": "code",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "661:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 132,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 131,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "666:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "661:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30786631",
                                "id": 133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "672:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_241_by_1",
                                  "typeString": "int_const 241"
                                },
                                "value": "0xf1"
                              },
                              "src": "661:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 129,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              220,
                              221
                            ],
                            "referencedDeclaration": 220,
                            "src": "653:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "653:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "653:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 138,
                                  "name": "code",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "707:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 140,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 139,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "712:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "707:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30786632",
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "718:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_242_by_1",
                                  "typeString": "int_const 242"
                                },
                                "value": "0xf2"
                              },
                              "src": "707:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 137,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              220,
                              221
                            ],
                            "referencedDeclaration": 220,
                            "src": "699:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "699:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "ExpressionStatement",
                        "src": "699:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 146,
                                  "name": "code",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "757:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 148,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 147,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "762:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "757:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30786634",
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "768:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_244_by_1",
                                  "typeString": "int_const 244"
                                },
                                "value": "0xf4"
                              },
                              "src": "757:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 145,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              220,
                              221
                            ],
                            "referencedDeclaration": 220,
                            "src": "749:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "749:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "749:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 154,
                                  "name": "code",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "811:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 156,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 155,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "816:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "811:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30786661",
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "822:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_250_by_1",
                                  "typeString": "int_const 250"
                                },
                                "value": "0xfa"
                              },
                              "src": "811:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 153,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              220,
                              221
                            ],
                            "referencedDeclaration": 220,
                            "src": "803:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "803:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "803:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 162,
                                  "name": "code",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "863:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 164,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 163,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "868:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "863:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30786666",
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "874:4:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                },
                                "value": "0xff"
                              },
                              "src": "863:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 161,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              220,
                              221
                            ],
                            "referencedDeclaration": 220,
                            "src": "855:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "855:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "855:24:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 114,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "569:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "code",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "573:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "573:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "569:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 170,
                  "initializationExpression": {
                    "assignments": [
                      111
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 111,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "554:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "554:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 113,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "566:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "554:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "586:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 118,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "586:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 120,
                    "nodeType": "ExpressionStatement",
                    "src": "586:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "550:356:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "",
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "967:2:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 174,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "943:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "943:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "943:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "924:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "924:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "924:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "994:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 180,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "981:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "981:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "981:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payforflag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "135:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "134:23:1"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "165:0:1"
            },
            "scope": 202,
            "src": "115:892:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1052:89:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "1070:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1070:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030303030303030",
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1083:16:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000000000"
                          },
                          "value": "1000000000"
                        },
                        "src": "1070:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        220,
                        221
                      ],
                      "referencedDeclaration": 220,
                      "src": "1062:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:38:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 196,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "1123:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1123:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 195,
                      "name": "ForFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1115:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "EmitStatement",
                  "src": "1110:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendFlag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:2:1"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:1"
            },
            "scope": 202,
            "src": "1017:124:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 203,
        "src": "26:1118:1"
      }
    ],
    "src": "0:1145:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50610355806100206000396000f3fe6080604052600436106100345760003560e01c8063c180319114610039578063d4b839921461006e578063ec19a84f1461009f575b600080fd5b34801561004557600080fd5b5061006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100a7565b005b34801561007a57600080fd5b506100836102c3565b604080516001600160a01b039092168252519081900360200190f35b61006c6102d2565b6001600160a01b0381166100ba57600080fd5b60408051603f833b908101601f1916820190925281815281600060208301853c60005b81518110156101f2578181815181106100f257fe5b6020910101516001600160f81b031916600f60fc1b141561011257600080fd5b81818151811061011e57fe5b6020910101516001600160f81b03191660f160f81b141561013e57600080fd5b81818151811061014a57fe5b6020910101516001600160f81b031916607960f91b141561016a57600080fd5b81818151811061017657fe5b6020910101516001600160f81b031916603d60fa1b141561019657600080fd5b8181815181106101a257fe5b6020910101516001600160f81b031916607d60f91b14156101c257600080fd5b8181815181106101ce57fe5b01602001516001600160f81b031990811614156101ea57600080fd5b6001016100dd565b5060408051600481526024810182526020810180516001600160e01b031663c5d2460160e01b178152915181516001600160a01b0387169382918083835b6020831061024f5780518252601f199092019160209182019101610230565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146102af576040519150601f19603f3d011682016040523d82523d6000602084013e6102b4565b606091505b505050826001600160a01b0316ff5b6000546001600160a01b031681565b6b033b2e3c9fd0803ce80000003410156102eb57600080fd5b6040805133815290517f89814845d4f005a4059f76ea572f39df73fbe3d1c9b20f12b3b03d09f999b9e29181900360200190a156fea265627a7a723158204ecedf7d085e481117298a625dfc1fd37f86a94d6697d83e57d747aff157b25f64736f6c63430005110032",
  "bytecodeSha1": "82f3e9c2f0ba961b89d1961663f09bba724a129a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "BoxGame",
  "coverageMap": {
    "branches": {
      "1": {
        "BoxGame.payforflag": {
          "12": [
            192,
            211,
            true
          ],
          "13": [
            613,
            628,
            true
          ],
          "14": [
            661,
            676,
            true
          ],
          "15": [
            707,
            722,
            true
          ],
          "16": [
            757,
            772,
            true
          ],
          "17": [
            811,
            826,
            true
          ],
          "18": [
            863,
            878,
            true
          ]
        },
        "BoxGame.sendFlag": {
          "19": [
            1070,
            1099,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "BoxGame.payforflag": {
          "0": [
            184,
            212
          ],
          "1": [
            605,
            629
          ],
          "2": [
            653,
            677
          ],
          "3": [
            699,
            723
          ],
          "4": [
            749,
            773
          ],
          "5": [
            803,
            827
          ],
          "6": [
            855,
            879
          ],
          "7": [
            586,
            589
          ],
          "8": [
            924,
            971
          ],
          "9": [
            981,
            1000
          ]
        },
        "BoxGame.sendFlag": {
          "10": [
            1062,
            1100
          ],
          "11": [
            1110,
            1134
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100345760003560e01c8063c180319114610039578063d4b839921461006e578063ec19a84f1461009f575b600080fd5b34801561004557600080fd5b5061006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100a7565b005b34801561007a57600080fd5b506100836102c3565b604080516001600160a01b039092168252519081900360200190f35b61006c6102d2565b6001600160a01b0381166100ba57600080fd5b60408051603f833b908101601f1916820190925281815281600060208301853c60005b81518110156101f2578181815181106100f257fe5b6020910101516001600160f81b031916600f60fc1b141561011257600080fd5b81818151811061011e57fe5b6020910101516001600160f81b03191660f160f81b141561013e57600080fd5b81818151811061014a57fe5b6020910101516001600160f81b031916607960f91b141561016a57600080fd5b81818151811061017657fe5b6020910101516001600160f81b031916603d60fa1b141561019657600080fd5b8181815181106101a257fe5b6020910101516001600160f81b031916607d60f91b14156101c257600080fd5b8181815181106101ce57fe5b01602001516001600160f81b031990811614156101ea57600080fd5b6001016100dd565b5060408051600481526024810182526020810180516001600160e01b031663c5d2460160e01b178152915181516001600160a01b0387169382918083835b6020831061024f5780518252601f199092019160209182019101610230565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146102af576040519150601f19603f3d011682016040523d82523d6000602084013e6102b4565b606091505b505050826001600160a01b0316ff5b6000546001600160a01b031681565b6b033b2e3c9fd0803ce80000003410156102eb57600080fd5b6040805133815290517f89814845d4f005a4059f76ea572f39df73fbe3d1c9b20f12b3b03d09f999b9e29181900360200190a156fea265627a7a723158204ecedf7d085e481117298a625dfc1fd37f86a94d6697d83e57d747aff157b25f64736f6c63430005110032",
  "deployedSourceMap": "26:1118:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;115:892;;8:9:-1;5:2;;;30:1;27;20:12;5:2;115:892:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;115:892:1;-1:-1:-1;;;;;115:892:1;;:::i;:::-;;83:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;83:21:1;;;:::i;:::-;;;;-1:-1:-1;;;;;83:21:1;;;;;;;;;;;;;;1017:124;;;:::i;115:892::-;-1:-1:-1;;;;;192:19:1;;184:28;;;;;;357:4;351:11;;402:26;312:18;;402:26;;;-1:-1:-1;;398:42:1;388:53;;375:67;;;455:18;;;312;231:12;416:4;505:15;;324:5;486:44;554:9;550:356;573:4;:11;569:1;:15;550:356;;;613:4;618:1;613:7;;;;;;;;;;;;;-1:-1:-1;;;;;;613:7:1;-1:-1:-1;;;613:15:1;;605:24;;;;;;661:4;666:1;661:7;;;;;;;;;;;;;-1:-1:-1;;;;;;661:7:1;-1:-1:-1;;;661:15:1;;653:24;;;;;;707:4;712:1;707:7;;;;;;;;;;;;;-1:-1:-1;;;;;;707:7:1;-1:-1:-1;;;707:15:1;;699:24;;;;;;757:4;762:1;757:7;;;;;;;;;;;;;-1:-1:-1;;;;;;757:7:1;-1:-1:-1;;;757:15:1;;749:24;;;;;;811:4;816:1;811:7;;;;;;;;;;;;;-1:-1:-1;;;;;;811:7:1;-1:-1:-1;;;811:15:1;;803:24;;;;;;863:4;868:1;863:7;;;;;;;;;;;;-1:-1:-1;;;;;;863:7:1;;;:15;;855:24;;;;;;586:3;;550:356;;;-1:-1:-1;943:27:1;;;22:32:-1;6:49;;943:27:1;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;924:47:1;;;;-1:-1:-1;;;;;924:18:1;;;:47;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;924:47:1;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;924:47:1;;994:5;-1:-1:-1;;;;;981:19:1;;83:21;;;-1:-1:-1;;;;;83:21:1;;:::o;1017:124::-;1083:16;1070:9;:29;;1062:38;;;;;;1115:19;;;1123:10;1115:19;;;;;;;;;;;;;1017:124::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    26,
    1144
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC1803191 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xEC19A84F EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3F DUP4 EXTCODESIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE DUP2 PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP6 EXTCODECOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1F2 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF2 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xF PUSH1 0xFC SHL EQ ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x11E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xF1 PUSH1 0xF8 SHL EQ ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x14A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x79 PUSH1 0xF9 SHL EQ ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x176 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x3D PUSH1 0xFA SHL EQ ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1A2 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x7D PUSH1 0xF9 SHL EQ ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1CE JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT SWAP1 DUP2 AND EQ ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0xDD JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC5D24601 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x24F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x230 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 CALLVALUE LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE SWAP1 MLOAD PUSH32 0x89814845D4F005A4059F76EA572F39DF73FBE3D1C9B20F12B3B03D09F999B9E2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x4E 0xCE 0xDF PUSH30 0x85E481117298A625DFC1FD37F86A94D6697D83E57D747AFF157B25F6473 PUSH16 0x6C634300051100320000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        26,
        1144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC1803191"
    },
    "25": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "EQ",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD4B83992"
    },
    "36": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6E"
    },
    "40": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEC19A84F"
    },
    "47": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F"
    },
    "51": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "DUP1",
      "path": "1"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        26,
        1144
      ],
      "op": "REVERT",
      "path": "1"
    },
    "57": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "58": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "59": {
      "op": "DUP1"
    },
    "60": {
      "op": "ISZERO"
    },
    "61": {
      "op": "PUSH2",
      "value": "0x45"
    },
    "64": {
      "op": "JUMPI"
    },
    "65": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "67": {
      "op": "DUP1"
    },
    "68": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "REVERT",
      "path": "1"
    },
    "69": {
      "op": "JUMPDEST"
    },
    "70": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "POP",
      "path": "1"
    },
    "71": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C"
    },
    "74": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "76": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "78": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "SUB",
      "path": "1"
    },
    "79": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "81": {
      "op": "DUP2"
    },
    "82": {
      "op": "LT"
    },
    "83": {
      "op": "ISZERO"
    },
    "84": {
      "op": "PUSH2",
      "value": "0x5C"
    },
    "87": {
      "op": "JUMPI"
    },
    "88": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "90": {
      "op": "DUP1"
    },
    "91": {
      "op": "REVERT"
    },
    "92": {
      "op": "JUMPDEST"
    },
    "93": {
      "op": "POP"
    },
    "94": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "97": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "99": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "101": {
      "op": "SHL"
    },
    "102": {
      "op": "SUB"
    },
    "103": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "AND",
      "path": "1"
    },
    "104": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA7"
    },
    "107": {
      "fn": "BoxGame.payforflag",
      "jump": "i",
      "offset": [
        115,
        1007
      ],
      "op": "JUMP",
      "path": "1"
    },
    "108": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "109": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "STOP",
      "path": "1"
    },
    "110": {
      "offset": [
        83,
        104
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "111": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "112": {
      "op": "DUP1"
    },
    "113": {
      "op": "ISZERO"
    },
    "114": {
      "op": "PUSH2",
      "value": "0x7A"
    },
    "117": {
      "op": "JUMPI"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "120": {
      "op": "DUP1"
    },
    "121": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "REVERT",
      "path": "1"
    },
    "122": {
      "op": "JUMPDEST"
    },
    "123": {
      "offset": [
        83,
        104
      ],
      "op": "POP",
      "path": "1"
    },
    "124": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83"
    },
    "127": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C3"
    },
    "130": {
      "fn": "BoxGame.payforflag",
      "jump": "i",
      "offset": [
        83,
        104
      ],
      "op": "JUMP",
      "path": "1"
    },
    "131": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "132": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "134": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "DUP1",
      "path": "1"
    },
    "135": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "142": {
      "op": "SHL"
    },
    "143": {
      "op": "SUB"
    },
    "144": {
      "offset": [
        83,
        104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "145": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "146": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "AND",
      "path": "1"
    },
    "147": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "DUP3",
      "path": "1"
    },
    "148": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "149": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "150": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "151": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "152": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "153": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "SUB",
      "path": "1"
    },
    "154": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "156": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "ADD",
      "path": "1"
    },
    "157": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "158": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "RETURN",
      "path": "1"
    },
    "159": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1017,
        1141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "160": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1017,
        1141
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C"
    },
    "163": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1017,
        1141
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D2"
    },
    "166": {
      "fn": "BoxGame.sendFlag",
      "jump": "i",
      "offset": [
        1017,
        1141
      ],
      "op": "JUMP",
      "path": "1"
    },
    "167": {
      "fn": "BoxGame.payforflag",
      "offset": [
        115,
        1007
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "174": {
      "op": "SHL"
    },
    "175": {
      "op": "SUB"
    },
    "176": {
      "fn": "BoxGame.payforflag",
      "offset": [
        192,
        211
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 0
    },
    "177": {
      "branch": 12,
      "fn": "BoxGame.payforflag",
      "offset": [
        192,
        211
      ],
      "op": "AND",
      "path": "1"
    },
    "178": {
      "fn": "BoxGame.payforflag",
      "offset": [
        184,
        212
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA"
    },
    "181": {
      "branch": 12,
      "fn": "BoxGame.payforflag",
      "offset": [
        184,
        212
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "182": {
      "fn": "BoxGame.payforflag",
      "offset": [
        184,
        212
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "184": {
      "fn": "BoxGame.payforflag",
      "offset": [
        184,
        212
      ],
      "op": "DUP1",
      "path": "1"
    },
    "185": {
      "fn": "BoxGame.payforflag",
      "offset": [
        184,
        212
      ],
      "op": "REVERT",
      "path": "1"
    },
    "186": {
      "fn": "BoxGame.payforflag",
      "offset": [
        184,
        212
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "187": {
      "fn": "BoxGame.payforflag",
      "offset": [
        357,
        361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "189": {
      "fn": "BoxGame.payforflag",
      "offset": [
        351,
        362
      ],
      "op": "DUP1",
      "path": "1"
    },
    "190": {
      "fn": "BoxGame.payforflag",
      "offset": [
        351,
        362
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "191": {
      "fn": "BoxGame.payforflag",
      "offset": [
        402,
        428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "193": {
      "fn": "BoxGame.payforflag",
      "offset": [
        312,
        330
      ],
      "op": "DUP4",
      "path": "1"
    },
    "194": {
      "fn": "BoxGame.payforflag",
      "offset": [
        312,
        330
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "195": {
      "fn": "BoxGame.payforflag",
      "offset": [
        402,
        428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "196": {
      "fn": "BoxGame.payforflag",
      "offset": [
        402,
        428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "197": {
      "fn": "BoxGame.payforflag",
      "offset": [
        402,
        428
      ],
      "op": "ADD",
      "path": "1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "200": {
      "op": "NOT"
    },
    "201": {
      "fn": "BoxGame.payforflag",
      "offset": [
        398,
        440
      ],
      "op": "AND",
      "path": "1"
    },
    "202": {
      "fn": "BoxGame.payforflag",
      "offset": [
        388,
        441
      ],
      "op": "DUP3",
      "path": "1"
    },
    "203": {
      "fn": "BoxGame.payforflag",
      "offset": [
        388,
        441
      ],
      "op": "ADD",
      "path": "1"
    },
    "204": {
      "fn": "BoxGame.payforflag",
      "offset": [
        375,
        442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "205": {
      "fn": "BoxGame.payforflag",
      "offset": [
        375,
        442
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "206": {
      "fn": "BoxGame.payforflag",
      "offset": [
        375,
        442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "207": {
      "fn": "BoxGame.payforflag",
      "offset": [
        455,
        473
      ],
      "op": "DUP2",
      "path": "1"
    },
    "208": {
      "fn": "BoxGame.payforflag",
      "offset": [
        455,
        473
      ],
      "op": "DUP2",
      "path": "1"
    },
    "209": {
      "fn": "BoxGame.payforflag",
      "offset": [
        455,
        473
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "210": {
      "fn": "BoxGame.payforflag",
      "offset": [
        312,
        330
      ],
      "op": "DUP2",
      "path": "1"
    },
    "211": {
      "fn": "BoxGame.payforflag",
      "offset": [
        231,
        243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "213": {
      "fn": "BoxGame.payforflag",
      "offset": [
        416,
        420
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "215": {
      "fn": "BoxGame.payforflag",
      "offset": [
        505,
        520
      ],
      "op": "DUP4",
      "path": "1"
    },
    "216": {
      "fn": "BoxGame.payforflag",
      "offset": [
        505,
        520
      ],
      "op": "ADD",
      "path": "1"
    },
    "217": {
      "fn": "BoxGame.payforflag",
      "offset": [
        324,
        329
      ],
      "op": "DUP6",
      "path": "1"
    },
    "218": {
      "fn": "BoxGame.payforflag",
      "offset": [
        486,
        530
      ],
      "op": "EXTCODECOPY",
      "path": "1"
    },
    "219": {
      "fn": "BoxGame.payforflag",
      "offset": [
        554,
        563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "221": {
      "fn": "BoxGame.payforflag",
      "offset": [
        550,
        906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "222": {
      "fn": "BoxGame.payforflag",
      "offset": [
        573,
        577
      ],
      "op": "DUP2",
      "path": "1"
    },
    "223": {
      "fn": "BoxGame.payforflag",
      "offset": [
        573,
        584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "224": {
      "fn": "BoxGame.payforflag",
      "offset": [
        569,
        570
      ],
      "op": "DUP2",
      "path": "1"
    },
    "225": {
      "fn": "BoxGame.payforflag",
      "offset": [
        569,
        584
      ],
      "op": "LT",
      "path": "1"
    },
    "226": {
      "fn": "BoxGame.payforflag",
      "offset": [
        550,
        906
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "227": {
      "fn": "BoxGame.payforflag",
      "offset": [
        550,
        906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F2"
    },
    "230": {
      "fn": "BoxGame.payforflag",
      "offset": [
        550,
        906
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "231": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        617
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 1
    },
    "232": {
      "fn": "BoxGame.payforflag",
      "offset": [
        618,
        619
      ],
      "op": "DUP2",
      "path": "1"
    },
    "233": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "DUP2",
      "path": "1"
    },
    "234": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "235": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "DUP2",
      "path": "1"
    },
    "236": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "LT",
      "path": "1"
    },
    "237": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2"
    },
    "240": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "241": {
      "dev": "Index out of range",
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "INVALID",
      "path": "1"
    },
    "242": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "243": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "245": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "246": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "ADD",
      "path": "1"
    },
    "247": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "ADD",
      "path": "1"
    },
    "248": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "253": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "255": {
      "op": "SHL"
    },
    "256": {
      "op": "SUB"
    },
    "257": {
      "op": "NOT"
    },
    "258": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        620
      ],
      "op": "AND",
      "path": "1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "263": {
      "op": "SHL"
    },
    "264": {
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        628
      ],
      "op": "EQ",
      "path": "1"
    },
    "265": {
      "branch": 13,
      "fn": "BoxGame.payforflag",
      "offset": [
        613,
        628
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "266": {
      "fn": "BoxGame.payforflag",
      "offset": [
        605,
        629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x112"
    },
    "269": {
      "branch": 13,
      "fn": "BoxGame.payforflag",
      "offset": [
        605,
        629
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "270": {
      "fn": "BoxGame.payforflag",
      "offset": [
        605,
        629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "272": {
      "fn": "BoxGame.payforflag",
      "offset": [
        605,
        629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "273": {
      "fn": "BoxGame.payforflag",
      "offset": [
        605,
        629
      ],
      "op": "REVERT",
      "path": "1"
    },
    "274": {
      "fn": "BoxGame.payforflag",
      "offset": [
        605,
        629
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "275": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        665
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 2
    },
    "276": {
      "fn": "BoxGame.payforflag",
      "offset": [
        666,
        667
      ],
      "op": "DUP2",
      "path": "1"
    },
    "277": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "DUP2",
      "path": "1"
    },
    "278": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "279": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "DUP2",
      "path": "1"
    },
    "280": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "LT",
      "path": "1"
    },
    "281": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11E"
    },
    "284": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "285": {
      "dev": "Index out of range",
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "INVALID",
      "path": "1"
    },
    "286": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "287": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "289": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "290": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "ADD",
      "path": "1"
    },
    "291": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "ADD",
      "path": "1"
    },
    "292": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "299": {
      "op": "SHL"
    },
    "300": {
      "op": "SUB"
    },
    "301": {
      "op": "NOT"
    },
    "302": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        668
      ],
      "op": "AND",
      "path": "1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "305": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "307": {
      "op": "SHL"
    },
    "308": {
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        676
      ],
      "op": "EQ",
      "path": "1"
    },
    "309": {
      "branch": 14,
      "fn": "BoxGame.payforflag",
      "offset": [
        661,
        676
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "310": {
      "fn": "BoxGame.payforflag",
      "offset": [
        653,
        677
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E"
    },
    "313": {
      "branch": 14,
      "fn": "BoxGame.payforflag",
      "offset": [
        653,
        677
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "314": {
      "fn": "BoxGame.payforflag",
      "offset": [
        653,
        677
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "316": {
      "fn": "BoxGame.payforflag",
      "offset": [
        653,
        677
      ],
      "op": "DUP1",
      "path": "1"
    },
    "317": {
      "fn": "BoxGame.payforflag",
      "offset": [
        653,
        677
      ],
      "op": "REVERT",
      "path": "1"
    },
    "318": {
      "fn": "BoxGame.payforflag",
      "offset": [
        653,
        677
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "319": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        711
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 3
    },
    "320": {
      "fn": "BoxGame.payforflag",
      "offset": [
        712,
        713
      ],
      "op": "DUP2",
      "path": "1"
    },
    "321": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "DUP2",
      "path": "1"
    },
    "322": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "323": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "DUP2",
      "path": "1"
    },
    "324": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "LT",
      "path": "1"
    },
    "325": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "328": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "329": {
      "dev": "Index out of range",
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "INVALID",
      "path": "1"
    },
    "330": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "333": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "334": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "ADD",
      "path": "1"
    },
    "335": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "ADD",
      "path": "1"
    },
    "336": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "op": "NOT"
    },
    "346": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        714
      ],
      "op": "AND",
      "path": "1"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "349": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "351": {
      "op": "SHL"
    },
    "352": {
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        722
      ],
      "op": "EQ",
      "path": "1"
    },
    "353": {
      "branch": 15,
      "fn": "BoxGame.payforflag",
      "offset": [
        707,
        722
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "354": {
      "fn": "BoxGame.payforflag",
      "offset": [
        699,
        723
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16A"
    },
    "357": {
      "branch": 15,
      "fn": "BoxGame.payforflag",
      "offset": [
        699,
        723
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "358": {
      "fn": "BoxGame.payforflag",
      "offset": [
        699,
        723
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "360": {
      "fn": "BoxGame.payforflag",
      "offset": [
        699,
        723
      ],
      "op": "DUP1",
      "path": "1"
    },
    "361": {
      "fn": "BoxGame.payforflag",
      "offset": [
        699,
        723
      ],
      "op": "REVERT",
      "path": "1"
    },
    "362": {
      "fn": "BoxGame.payforflag",
      "offset": [
        699,
        723
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "363": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        761
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 4
    },
    "364": {
      "fn": "BoxGame.payforflag",
      "offset": [
        762,
        763
      ],
      "op": "DUP2",
      "path": "1"
    },
    "365": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "366": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "367": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "368": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "LT",
      "path": "1"
    },
    "369": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x176"
    },
    "372": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "373": {
      "dev": "Index out of range",
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "INVALID",
      "path": "1"
    },
    "374": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "375": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "377": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "378": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "ADD",
      "path": "1"
    },
    "379": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "ADD",
      "path": "1"
    },
    "380": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "385": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "387": {
      "op": "SHL"
    },
    "388": {
      "op": "SUB"
    },
    "389": {
      "op": "NOT"
    },
    "390": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        764
      ],
      "op": "AND",
      "path": "1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "393": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        772
      ],
      "op": "EQ",
      "path": "1"
    },
    "397": {
      "branch": 16,
      "fn": "BoxGame.payforflag",
      "offset": [
        757,
        772
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "398": {
      "fn": "BoxGame.payforflag",
      "offset": [
        749,
        773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196"
    },
    "401": {
      "branch": 16,
      "fn": "BoxGame.payforflag",
      "offset": [
        749,
        773
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "402": {
      "fn": "BoxGame.payforflag",
      "offset": [
        749,
        773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "404": {
      "fn": "BoxGame.payforflag",
      "offset": [
        749,
        773
      ],
      "op": "DUP1",
      "path": "1"
    },
    "405": {
      "fn": "BoxGame.payforflag",
      "offset": [
        749,
        773
      ],
      "op": "REVERT",
      "path": "1"
    },
    "406": {
      "fn": "BoxGame.payforflag",
      "offset": [
        749,
        773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "407": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        815
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 5
    },
    "408": {
      "fn": "BoxGame.payforflag",
      "offset": [
        816,
        817
      ],
      "op": "DUP2",
      "path": "1"
    },
    "409": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "DUP2",
      "path": "1"
    },
    "410": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "411": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "DUP2",
      "path": "1"
    },
    "412": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "LT",
      "path": "1"
    },
    "413": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A2"
    },
    "416": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "417": {
      "dev": "Index out of range",
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "INVALID",
      "path": "1"
    },
    "418": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "419": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "421": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "422": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "ADD",
      "path": "1"
    },
    "423": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "ADD",
      "path": "1"
    },
    "424": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "429": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "431": {
      "op": "SHL"
    },
    "432": {
      "op": "SUB"
    },
    "433": {
      "op": "NOT"
    },
    "434": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        818
      ],
      "op": "AND",
      "path": "1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "437": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "439": {
      "op": "SHL"
    },
    "440": {
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        826
      ],
      "op": "EQ",
      "path": "1"
    },
    "441": {
      "branch": 17,
      "fn": "BoxGame.payforflag",
      "offset": [
        811,
        826
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "442": {
      "fn": "BoxGame.payforflag",
      "offset": [
        803,
        827
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C2"
    },
    "445": {
      "branch": 17,
      "fn": "BoxGame.payforflag",
      "offset": [
        803,
        827
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "446": {
      "fn": "BoxGame.payforflag",
      "offset": [
        803,
        827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "448": {
      "fn": "BoxGame.payforflag",
      "offset": [
        803,
        827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "449": {
      "fn": "BoxGame.payforflag",
      "offset": [
        803,
        827
      ],
      "op": "REVERT",
      "path": "1"
    },
    "450": {
      "fn": "BoxGame.payforflag",
      "offset": [
        803,
        827
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "451": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        867
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 6
    },
    "452": {
      "fn": "BoxGame.payforflag",
      "offset": [
        868,
        869
      ],
      "op": "DUP2",
      "path": "1"
    },
    "453": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "454": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "455": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "456": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "LT",
      "path": "1"
    },
    "457": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CE"
    },
    "460": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "461": {
      "dev": "Index out of range",
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "INVALID",
      "path": "1"
    },
    "462": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "463": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "464": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "466": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "ADD",
      "path": "1"
    },
    "467": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "op": "SUB"
    },
    "476": {
      "op": "NOT"
    },
    "477": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "478": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "479": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        870
      ],
      "op": "AND",
      "path": "1"
    },
    "480": {
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        878
      ],
      "op": "EQ",
      "path": "1"
    },
    "481": {
      "branch": 18,
      "fn": "BoxGame.payforflag",
      "offset": [
        863,
        878
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "482": {
      "fn": "BoxGame.payforflag",
      "offset": [
        855,
        879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EA"
    },
    "485": {
      "branch": 18,
      "fn": "BoxGame.payforflag",
      "offset": [
        855,
        879
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "486": {
      "fn": "BoxGame.payforflag",
      "offset": [
        855,
        879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "488": {
      "fn": "BoxGame.payforflag",
      "offset": [
        855,
        879
      ],
      "op": "DUP1",
      "path": "1"
    },
    "489": {
      "fn": "BoxGame.payforflag",
      "offset": [
        855,
        879
      ],
      "op": "REVERT",
      "path": "1"
    },
    "490": {
      "fn": "BoxGame.payforflag",
      "offset": [
        855,
        879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "491": {
      "fn": "BoxGame.payforflag",
      "offset": [
        586,
        589
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x1"
    },
    "493": {
      "fn": "BoxGame.payforflag",
      "offset": [
        586,
        589
      ],
      "op": "ADD",
      "path": "1"
    },
    "494": {
      "fn": "BoxGame.payforflag",
      "offset": [
        550,
        906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD"
    },
    "497": {
      "fn": "BoxGame.payforflag",
      "offset": [
        550,
        906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "498": {
      "fn": "BoxGame.payforflag",
      "offset": [
        550,
        906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x40"
    },
    "502": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "DUP1",
      "path": "1"
    },
    "503": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "506": {
      "op": "DUP2"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "510": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "DUP2",
      "path": "1"
    },
    "511": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "ADD",
      "path": "1"
    },
    "512": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "DUP3",
      "path": "1"
    },
    "513": {
      "fn": "BoxGame.payforflag",
      "offset": [
        943,
        970
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "ADD"
    },
    "518": {
      "op": "DUP1"
    },
    "519": {
      "op": "MLOAD"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "op": "SUB"
    },
    "528": {
      "op": "AND"
    },
    "529": {
      "op": "PUSH4",
      "value": "0xC5D24601"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "OR"
    },
    "538": {
      "op": "DUP2"
    },
    "539": {
      "op": "MSTORE"
    },
    "540": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "541": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "542": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "543": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "op": "SUB"
    },
    "552": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        942
      ],
      "op": "DUP8",
      "path": "1"
    },
    "553": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        942
      ],
      "op": "AND",
      "path": "1"
    },
    "554": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        942
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "555": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP3",
      "path": "1"
    },
    "556": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "557": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP1",
      "path": "1"
    },
    "558": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP4",
      "path": "1"
    },
    "559": {
      "op": "DUP4"
    },
    "560": {
      "op": "JUMPDEST"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "563": {
      "op": "DUP4"
    },
    "564": {
      "op": "LT"
    },
    "565": {
      "op": "PUSH2",
      "value": "0x24F"
    },
    "568": {
      "op": "JUMPI"
    },
    "569": {
      "op": "DUP1"
    },
    "570": {
      "op": "MLOAD"
    },
    "571": {
      "op": "DUP3"
    },
    "572": {
      "op": "MSTORE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "575": {
      "op": "NOT"
    },
    "576": {
      "op": "SWAP1"
    },
    "577": {
      "op": "SWAP3"
    },
    "578": {
      "op": "ADD"
    },
    "579": {
      "op": "SWAP2"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "582": {
      "op": "SWAP2"
    },
    "583": {
      "op": "DUP3"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "SWAP2"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "op": "PUSH2",
      "value": "0x230"
    },
    "590": {
      "op": "JUMP"
    },
    "591": {
      "op": "JUMPDEST"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "DUP4"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "597": {
      "op": "SUB"
    },
    "598": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "601": {
      "op": "EXP"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "op": "DUP1"
    },
    "604": {
      "op": "NOT"
    },
    "605": {
      "op": "DUP3"
    },
    "606": {
      "op": "MLOAD"
    },
    "607": {
      "op": "AND"
    },
    "608": {
      "op": "DUP2"
    },
    "609": {
      "op": "DUP5"
    },
    "610": {
      "op": "MLOAD"
    },
    "611": {
      "op": "AND"
    },
    "612": {
      "op": "DUP1"
    },
    "613": {
      "op": "DUP3"
    },
    "614": {
      "op": "OR"
    },
    "615": {
      "op": "DUP6"
    },
    "616": {
      "op": "MSTORE"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "621": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "622": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "623": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "624": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "625": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "ADD",
      "path": "1"
    },
    "626": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "627": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "628": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "629": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "631": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "633": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "634": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP1",
      "path": "1"
    },
    "635": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP4",
      "path": "1"
    },
    "636": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "SUB",
      "path": "1"
    },
    "637": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "638": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DUP6",
      "path": "1"
    },
    "639": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "GAS",
      "path": "1"
    },
    "640": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "DELEGATECALL",
      "path": "1"
    },
    "641": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "642": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "643": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "644": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "645": {
      "op": "DUP1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "648": {
      "op": "DUP2"
    },
    "649": {
      "op": "EQ"
    },
    "650": {
      "op": "PUSH2",
      "value": "0x2AF"
    },
    "653": {
      "op": "JUMPI"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "656": {
      "op": "MLOAD"
    },
    "657": {
      "op": "SWAP2"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "661": {
      "op": "NOT"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "664": {
      "op": "RETURNDATASIZE"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "AND"
    },
    "667": {
      "op": "DUP3"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "671": {
      "op": "MSTORE"
    },
    "672": {
      "op": "RETURNDATASIZE"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "MSTORE"
    },
    "675": {
      "op": "RETURNDATASIZE"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "680": {
      "op": "DUP5"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "op": "RETURNDATACOPY"
    },
    "683": {
      "op": "PUSH2",
      "value": "0x2B4"
    },
    "686": {
      "op": "JUMP"
    },
    "687": {
      "op": "JUMPDEST"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "690": {
      "op": "SWAP2"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "op": "JUMPDEST"
    },
    "693": {
      "op": "POP"
    },
    "694": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "695": {
      "fn": "BoxGame.payforflag",
      "offset": [
        924,
        971
      ],
      "op": "POP",
      "path": "1"
    },
    "696": {
      "fn": "BoxGame.payforflag",
      "offset": [
        994,
        999
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 9
    },
    "697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "703": {
      "op": "SHL"
    },
    "704": {
      "op": "SUB"
    },
    "705": {
      "fn": "BoxGame.payforflag",
      "offset": [
        981,
        1000
      ],
      "op": "AND",
      "path": "1"
    },
    "706": {
      "fn": "BoxGame.payforflag",
      "offset": [
        981,
        1000
      ],
      "op": "SELFDESTRUCT",
      "path": "1"
    },
    "707": {
      "offset": [
        83,
        104
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "708": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "710": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "SUB"
    },
    "719": {
      "offset": [
        83,
        104
      ],
      "op": "AND",
      "path": "1"
    },
    "720": {
      "fn": "BoxGame.payforflag",
      "offset": [
        83,
        104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "721": {
      "fn": "BoxGame.payforflag",
      "jump": "o",
      "offset": [
        83,
        104
      ],
      "op": "JUMP",
      "path": "1"
    },
    "722": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1017,
        1141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "723": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1083,
        1099
      ],
      "op": "PUSH12",
      "path": "1",
      "statement": 10,
      "value": "0x33B2E3C9FD0803CE8000000"
    },
    "736": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1070,
        1079
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "737": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1070,
        1099
      ],
      "op": "LT",
      "path": "1"
    },
    "738": {
      "branch": 19,
      "fn": "BoxGame.sendFlag",
      "offset": [
        1070,
        1099
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "739": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1062,
        1100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EB"
    },
    "742": {
      "branch": 19,
      "fn": "BoxGame.sendFlag",
      "offset": [
        1062,
        1100
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "743": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1062,
        1100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "745": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1062,
        1100
      ],
      "op": "DUP1",
      "path": "1"
    },
    "746": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1062,
        1100
      ],
      "op": "REVERT",
      "path": "1"
    },
    "747": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1062,
        1100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "748": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x40"
    },
    "750": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "751": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "752": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1123,
        1133
      ],
      "op": "CALLER",
      "path": "1"
    },
    "753": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "754": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "755": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "756": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "757": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x89814845D4F005A4059F76EA572F39DF73FBE3D1C9B20F12B3B03D09F999B9E2"
    },
    "790": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "791": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "792": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "793": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "SUB",
      "path": "1"
    },
    "794": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "796": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "ADD",
      "path": "1"
    },
    "797": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "798": {
      "fn": "BoxGame.sendFlag",
      "offset": [
        1115,
        1134
      ],
      "op": "LOG1",
      "path": "1"
    },
    "799": {
      "fn": "BoxGame.sendFlag",
      "jump": "o",
      "offset": [
        1017,
        1141
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "9693cdaf7b3a581be83e4e1124a12ffd3f5140f0",
  "source": "pragma solidity ^0.5.10;\n\ncontract BoxGame {\n\n    event ForFlag(address addr);\n    address public target;\n    \n    function payforflag(address payable _addr) public {\n        \n        require(_addr != address(0));\n        \n        uint256 size;\n        bytes memory code;\n\n        assembly {\n            size := extcodesize(_addr)\n            code := mload(0x40)\n            mstore(0x40, add(code, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n            mstore(code, size)\n            extcodecopy(_addr, add(code, 0x20), 0, size)\n        }\n\n        for(uint256 i = 0; i < code.length; i++) {\n            require(code[i] != 0xf0); // CREATE\n            require(code[i] != 0xf1); // CALL\n            require(code[i] != 0xf2); // CALLCODE\n            require(code[i] != 0xf4); // DELEGATECALL\n            require(code[i] != 0xfa); // STATICCALL\n            require(code[i] != 0xff); // SELFDESTRUCT\n        }\n        \n        _addr.delegatecall(abi.encodeWithSignature(\"\"));\n        selfdestruct(_addr);\n    }\n    \n    function sendFlag() public payable {\n        require(msg.value >= 1000000000 ether);\n        emit ForFlag(msg.sender);\n    }\n\n}\n",
  "sourceMap": "26:1118:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:1118:1;;;;;;;",
  "sourcePath": "contracts/a.sol",
  "type": "contract"
}