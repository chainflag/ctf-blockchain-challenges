from src.utils.auth import get_acc_nonce
from src.utils.prettyprint.Red import Printer, Processor, Formator
from src.utils.compiler import comp
from src.utils.utils import randhex
from src.banner.text.corpus import DEPLOY_SUCCESS_CELEBRATION

from src.deployer import Montagy
from src.interface import IMontagy
import re

def finish_deploy(montage_address):
		Printer.ppln(DEPLOY_SUCCESS_CELEBRATION)
		#return bytes.fromhex(montage_address.split("0x")[1])
		return montage_address.split("0x")[1]


def run(ctx, _acct):
	p = Printer()
	processor = Processor(40)
	formator = Formator()

	#p.ppln(formator.in_all_left("[-] loading deploy cache..."))
	#p.ppln("[*] loading deploy cache...")

	ctx = comp(ctx)
	processor.update(3)

	acc_nonce = get_acc_nonce(ctx, _acct)
	processor.update(2)


	# 1 stage contracts deploy
	err, montagy_deploy_txhash = Montagy.deploy(ctx, _acct, acc_nonce)
	processor.update(5)

	montage_address = Montagy.review(ctx, _acct, montagy_deploy_txhash)
	processor.update(5)

	# 2 stage P1 P2 deploy
#	input_p1code = "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000740608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106e0806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806319ff1d211461005c5780635d831619146100df5780637b76ac911461016c57806381a20b0a1461018a578063fd922a421461040a575b600080fd5b610064610454565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a4578082015181840152602081019050610089565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61015260048036036101008110156100f657600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610491565b604051808215151515815260200191505060405180910390f35b6101746104c1565b6040518082815260200191505060405180910390f35b610408600480360360808110156101a057600080fd5b81019080803590602001906401000000008111156101bd57600080fd5b8201836020820111156101cf57600080fd5b803590602001918460018302840111640100000000831117156101f157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561025457600080fd5b82018360208201111561026657600080fd5b8035906020019184600183028401116401000000008311171561028857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102eb57600080fd5b8201836020820111156102fd57600080fd5b8035906020019184600183028401116401000000008311171561031f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561038257600080fd5b82018360208201111561039457600080fd5b803590602001918460018302840111640100000000831117156103b657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104c9565b005b610412610686565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60606040518060400160405280601081526020017f526561645772697465436154466c616700000000000000000000000000000000815250905090565b600062726365828486181886888a168b8d1818181710156104b157600080fd5b6001905098975050505050505050565b600080905090565b671234567890abcdef60c01b77ffffffffffffffffffffffffffffffffffffffffffffffff191683805190602001208580519060200120161461050b57600080fd5b67abcdef123456789060c01b77ffffffffffffffffffffffffffffffffffffffffffffffff191682805190602001208480519060200120181461054d57600080fd5b67a1b2c3d4e5f6098760c01b77ffffffffffffffffffffffffffffffffffffffffffffffff191682805190602001208580519060200120171461058f57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376fe1e92826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561061c578082015181840152602081019050610601565b50505050905090810190601f1680156106495780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561066857600080fd5b505af115801561067c573d6000803e3d6000fd5b5050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a723158206302876a93a2f8c254feea0484f042ce2eeea0380fd5fca199b197d71e2e656e64736f6c634300050b0032"
	
#	input_p1code = re.sub('a265627a7a72305820.{64}64736f6c634300050b0032', 'a265627a7a72305820'+randhex(64)+'64736f6c634300050b0032', input_p1code)
	#input_p1code.repalce("627a7a723158206302876a93a2f8c254feea0484f042ce2eeea0380fd5fca199b197d71e2e656e64736f6c634300050b0032", "627a7a" + ''.join(random.sample(string.hexdigits, 10)).lower()*9 + "0032")
	input_p2code = "000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000005a2608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610542806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806304f77cfa146100515780634059e88714610073578063fd922a42146101c5578063ffa644851461020f575b600080fd5b61005961028e565b604051808215151515815260200191505060405180910390f35b6101c36004803603604081101561008957600080fd5b81019080803590602001906401000000008111156100a657600080fd5b8201836020820111156100b857600080fd5b803590602001918460018302840111640100000000831117156100da57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561013d57600080fd5b82018360208201111561014f57600080fd5b8035906020019184600183028401116401000000008311171561017157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610362565b005b6101cd61049e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61028c600480360361012081101561022657600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291905050506104c3565b005b6000806009546008546007541818600654600554600454181860035460025460015418180101905060006009546006546003540101600854600554600254010160075460045460015401011818905063aabbccdd818301106102ef57600080fd5b708261e26b90505061031256e5afb60721cb821161030c57600080fd5b8082027ef35b6080614321368282376084810151606401816080016143855161051756101561033a57600080fd5b6f65e670d9bd540cea22fdab97e36840e2818303101561035957600080fd5b60019250505090565b61036a61028e565b61037357600080fd5b716111d850336107ef16565b908018915a905660701b6dffffffffffffffffffffffffffff19168280519060200120141561049a576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376fe1e92826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561043557808201518184015260208101905061041a565b50505050905090810190601f1680156104625780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561048157600080fd5b505af1158015610495573d6000803e3d6000fd5b505050505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b88600181905550876002819055508660038190555085600481905550846005819055508360068190555082600781905550816008819055508060098190555050505050505050505056fea265627a7a723158205b60025b8060051461049a57818160041b1c61ffff16919060010161051a564d64736f6c634300050b0032"
	#000000000000000000000000000000000000000000000000000000000000

	input_p2code = re.sub('a265627a7a723158205b60025b8060051461049a57818160041b1c61ffff16919060010161051a56.{2}64736f6c6343.{6}0032', 'a265627a7a723158205b60025b8060051461049a57818160041b1c61ffff16919060010161051a56'+randhex(2)+'64736f6c6343'+randhex(6)+'0032', input_p2code)

	#input_p2code.repalce("627a7a723158205b60025b8060051461049a57818160041b1c61ffff16919060010161051a564d64736f6c634300050b0032", "627a7a" + ''.join(random.sample(string.hexdigits, 10)).lower()*9 + "0032")
	#input_3_startGame = "0000000000000000000000000000000000000000000000000000000000000001"

	#err, p1_deploy_txhash = IMontagy.register1(ctx, montage_address, input_p1code, _acct, acc_nonce)
	#processor.update(5)

	err, p2_deploy_txhash = IMontagy.register2(ctx, montage_address, input_p2code, _acct, acc_nonce)
	processor.update(5)

	#IMontagy.register1_review(ctx, _acct, p1_deploy_txhash)
	#processor.update(5)

	IMontagy.register2_review(ctx, _acct, p2_deploy_txhash)
	processor.update(5)


	# 3 stage New Puzzle
	'''
	err, newpuzzle1_txhash = IMontagy.newPuzzle1(ctx, montage_address, input_p1code, _acct, acc_nonce)
	processor.update(5)

	IMontagy.newPuzzle1_review(ctx, _acct, newpuzzle1_txhash)
	processor.update(5)

	p1_address = IMontagy.getPAddress(ctx, montage_address, acc_nonce)
	processor.update(5)
	'''

	err, newpuzzle2_txhash = IMontagy.newPuzzle2(ctx, montage_address, input_p2code, _acct, acc_nonce)
	processor.update(5)

	IMontagy.newPuzzle2_review(ctx, _acct, newpuzzle2_txhash)
	processor.update(5)

	p2_address = IMontagy.getPAddress(ctx, montage_address, acc_nonce)
	processor.update(5)



	# finish deployer
	return finish_deploy(montage_address)



